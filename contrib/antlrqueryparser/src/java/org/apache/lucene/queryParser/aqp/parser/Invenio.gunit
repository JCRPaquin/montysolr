gunit Invenio;

@header {
package org.apache.lucene.queryParser.aqp.parser;
}

// We assume that the default operator is AND


//------------------- mainQ
mainQ:

"+(author:\"richter, burton*\" | exactauthor:\"richter, b *\" | exactauthor:\"richter, b\" | exactauthor:\"richter, bu\" | exactauthor:\"richter, bur\" | exactauthor:\"richter, burt\" | exactauthor:\"richter, burto\" | author:\"richter, burton, *\" +title:quark)" -> ""

"expr1" OK

"(expr1)" -> ""  //+ expr

"expr1 - (expr2)" -> "" //['+', 'expr1', '-', 'expr2']

"+ expr1 - (expr2)" -> "" // ['+', 'expr1', '-', 'expr2']

"+ expr1 - (expr2)" -> "" // ['+', 'expr1', '-', 'expr2']

"expr1 (expr2)" -> "" // ['+', 'expr1', '+', 'expr2']

"(expr1) - expr2" -> "" // ['+', 'expr1', '-', 'expr2']

"(expr1)-(expr2)" -> "" // ['+', 'expr1', '-', 'expr2']

"-(expr1)-(expr2)" -> "" // ['-', 'expr1', '-', 'expr2']

"(expr1) - expr2 + (expr3)" -> "" // ['+', 'expr1', '-', 'expr2', '+', 'expr3']

"(expr1) - expr2 + (expr3) | expr4" -> "" // ['+', 'expr1', '-', 'expr2', '+', 'expr3', '|', 'expr4']

"(expr1) - expr2 + (expr3 | expr4) | \"expr5 + expr6\"" -> "" // ['+', 'expr1', '-', 'expr2', '+', 'expr3 | expr4', '|', '"expr5 + expr6"']

"\"expr1\" (expr2) expr3" -> "" // ['+', '"expr1"', '+', 'expr2', '+', 'expr3']

"\"expr1\"->\"expr2\"" -> "" // '+', '"expr1"->"expr2"

"(expr1) expr2 (expr3) | expr4" -> "" // ['+', 'expr1', '+', 'expr2', '+', 'expr3', '|', 'expr4']

"((expr1)) + (expr2 - expr3)" -> "" // ['+', 'expr1', '+', 'expr2', '-', 'expr3'

"expr1 - (expr2 - (expr3 | expr4))" -> "" // ['+', 'expr1', '+', '- expr2 | expr3 | expr4']

"(expr" FAIL

"expr)" FAIL

"(expr1) not expr2 and (expr3) or expr4" -> "" // ['+', 'expr1', '-', 'expr2', '+', 'expr3', '|', 'expr4']

"(expr1) not expr2 | \"expressions not in and quotes | (are) not - parsed \" - (expr3) or expr4" -> "" // ['+', 'expr1', '-', 'expr2', '|', '"expressions not in and quotes | (are) not - parsed "', '-', 'expr3', '|', 'expr4']

"expr1 \\\" expr2 foo(expr3) not expr4 \\\" and (expr5)" -> "" // ['+', 'expr1', '+', '\\"', '+', 'expr2', '+', 'foo(expr3)', '-', 'expr4', '+', '\\"', '+', 'expr5']

// XXX: example of the confusion of '+' and AND
"(expr1 and expr2) or expr3" -> "" // ['+', 'expr1 + expr2', '|', 'expr3'] 

"(expr1 and expr2) or expr3" -> ""

"(expr1 + expr2) | expr3" -> "" 

"(expr1 and expr2) or expr3" -> ""

"(expr1 + expr2) or expr3" -> ""

"(expr1) - expr2 | \\"expressions - in + quotes | (are) not - parsed \\" - (expr3) | expr4" -> "" // ['+', 'expr1', '-', 'expr2', '|', '"expressions - in + quotes | (are) not - parsed "', '-', 'expr3', '|', 'expr4']

"(expr1) - expr2 | \\'expressions - in + quotes | (are) not - parsed \\' - (expr3) | expr4" -> "" // ['+', 'expr1', '-', 'expr2', '|', "'expressions - in + quotes | (are) not - parsed '", '-', 'expr3', '|', 'expr4']

"expr1 \\' expr2 +(expr3) -expr4 \\' + (expr5)" -> "" // ['+', 'expr1', '+', "\\'", '+', 'expr2', '+', 'expr3', '-', 'expr4', '+', "\\'", '+', 'expr5']

"expr1 \\" expr2 +(expr3) -expr4 \\" + (expr5)" -> "" // ['+', 'expr1', '+', '\\"', '+', 'expr2', '+', 'expr3', '-', 'expr4', '+', '\\"', '+', 'expr5']

"\"expr1\" - (expr2)" -> "" // ['+', '"expr1"', '-', 'expr2']

"-\"expr1\" - (expr2)" -> "" // ['-', '"expr1"', '-', 'expr2']

"p0 or p1 or p2 or p3 or p4" -> "" // ['+', 'p0', '|', 'p1', '|', 'p2', '|', 'p3', '|', 'p4']

"(p0 or p1) not p2" -> "" //  ['+', 'p0 | p1', '-', 'p2']


"foo oR bar" -> "" // ['+', 'foo', '|', 'bar']

"(ellis )" -> "" // ['+', 'ellis']

"(U(1) or SL(2,Z))" -> "" // ['+', 'u(1) | sl(2,z)']

"refersto:(author:\"s parke\" or author:ellis)" -> "" // ['+', 'refersto:\'author:"s parke" | author:ellis\'']

"refersto:(author:\'s parke\' or author:ellis)" -> "" // ['+', 'refersto:"author:\'s parke\' | author:ellis"']

"refersto:(author:\"s parke\")" -> "" // ['+', 'refersto:author:"s parke"']

"e(+)e(-)" -> "" // ['+', 'e(+)e(-)']

"Fe(2+)" -> "" // ['+', 'fe(2+)']

/*
'+', 'measurements', '+', 'of', '+', 'cp-conserving', '+', 'trilinear', '+', 'gauge', \
'+', 'boson', '+', 'couplings', '+', 'wwv', '+', 'v + gamma, + z', \
'+', 'in', '+', 'e(+)e(-)', '+', 'collisions', '+', 'at', '+', 'lep2'
*/
"Measurements of CP-conserving trilinear gauge boson couplings WWV (V gamma, Z) in e(+)e(-) collisions at LEP2" -> "" 

"refersto:(author:ellis or author:hawking)" -> "" // ['+', 'refersto:"author:ellis | author:hawking"']


// -- from: http://inspirehep.net/help/search-guide

"ellis standard model" -> ""

"author:\"Ellis, J\" title:(muon neutrino) year:2001" -> ""

"ellis muon" -> ""

"2001" -> ""

"\"Ellis, J\"" -> ""

"\'muon decay\'" -> ""

"\'Ellis, J\'" -> ""

"ellis +muon" -> ""

"ellis muon" -> ""

"ellis and muon" -> ""

"ellis -muon" -> ""

"ellis not muon" -> ""

"ellis |muon" -> ""

"ellis or muon" -> ""

"muon or kaon and ellis" -> ""

"ellis and muon or kaon" -> ""

"muon or kaon and ellis -decay" -> ""

"(gravity OR supergravity) AND (ellis OR perelstein)" -> ""


// special chars and punctuation

"C++" -> ""

"O\'Shea" -> ""

"$e^{+}e^{-}$" -> ""

"hep-ph/0204133" -> ""

"BlaCK hOlEs" -> ""

"пушкин" -> ""

// Lemaître
"author:Lemaitre" -> ""

"muon*" -> ""

"CERN-TH*31" -> ""

"a*" -> ""

"\"Neutrino mass*\"" -> ""

"author:ellis" -> ""

"author:ellis title:muon*" -> ""

"experiment:NA60 year:2001" -> ""

"title:/^E.*s$/" -> ""

"author:/^Ellis, (J|John)$/" -> ""

"title:/dense ([^ l]* )?matter/" -> ""

"collection:PREPRINT -year:/^[0-9]{4}([\?\-]|\-[0-9]{4})?$/" -> ""

"collection:PREPRINT -year:/^[[:digit:]]{4}([\?\-]|\-[[:digit:]]{4})?$/" -> ""

"muon decay year:1983->1992" -> ""

"author:\"Ellis, J\"->\"Ellis, Qqq\"" -> ""

"refersto:reportnumber:hep-th/0201100" -> ""

"citedby:author:klebanov" -> ""

"refersto:author:\"Klebanov, I\"" -> ""

"refersto:keyword:gravitino" -> ""

"author:klebanov AND citedby:author:papadimitriou NOT refersto:author:papadimitriou" -> ""

"refersto:/author:\"Klebanov, I\" title:O(N)/" -> ""

"author:ellis -muon* +abstract:\'dense quark matter\' year:200*" -> ""

"higgs or reference:higgs or fulltext:higgs" -> ""

"author:lin fulltext:Schwarzschild fulltext:AdS reference:\"Adv. Theor. Math. Phys.\"" -> ""

// -- from: http://inspirehep.net/help/search-tips (05-12-2011)

//"find a l everett or t light higgs and j phys.rev.lett. and primarch hep-ex"
// logical operators (no precedence)
"a:everett or t:light higgs and j:phys.rev.lett. and primarch:hep-ex" -> ""

// find a rober* and t dyso*
"a:rober* and t:dyso*" -> ""

"find j phys.rev.lett.,62,1825" -> ""

"find j prlta and a smith and c hep-th/9711200" -> ""

"find j \"Phys.Lett.,B*\" or j Phys.Rev.Lett. and a d rainwater" -> ""

"find d 1997-11" -> ""

"find da today and title neutrino*" -> ""

"find da today - 2 and primarch hep-th" -> ""

"find da today - 2 and primarch hep-th" -> ""

"find eprint arxiv:0711.2908 or arxiv:0705.4298 or eprint hep-ph/0504227" -> ""

"find a unruh or t cauchy not t problem and primarch gr-qc" -> ""

"find a m albrow and j phys.rev.lett. and t quark* and topcite 137+" -> ""

"find a bando and topcite 100->500" -> ""

"find c Phys.Rev.Lett.,28,1421 or c arXiv:0711.4556" -> ""

"find af harvard u." -> ""

"find citedby hep-th/9711200 and author cvetic" -> ""

"find a parke and citedby author witten" -> ""

"find a witten and refersto author parke, s j" -> ""

"find refersto hep-th/9711200 and t nucl*" -> ""

"find refersto a parke or refersto a lykken and a witten" -> ""

"fin af oxford u. and refersto title muon*" -> ""

"find refersto j Phys.Rev.Lett." -> ""

"find ft \"faster than light\"" -> ""

"find ft neutrino axion \"dark matter\" cosmology" -> ""

"find caption soft SUSY breaking" -> ""

"find a t dorigo and tc p" -> ""

 


